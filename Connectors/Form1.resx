<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pic.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        uf8FykL+LvTdnOcAAAAASUVORK5CYII=
</value>
  </data>
</root>